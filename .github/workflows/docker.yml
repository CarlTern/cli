name: Docker

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  push:
    name: 'Push Docker images'
    strategy:
      matrix:
        stage: [ 'cli', 'scan', 'resolution']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta-alpine
        uses: docker/metadata-action@v4
        with:
          flavor: |
            latest=${{ matrix.stage == 'cli' }}
          images: |
            debricked/cli
            ghcr.io/debricked/cli
          tags: |
            type=semver,pattern={{version}},enable=${{ matrix.stage == 'cli' }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ matrix.stage == 'cli' }}
            type=semver,pattern={{major}},enable=${{ matrix.stage == 'cli' }}
            type=edge,enable=${{ matrix.stage == 'cli' }}
            type=semver,pattern={{version}}-${{ matrix.stage }}
            type=semver,pattern={{major}}.{{minor}}-${{ matrix.stage }}
            type=semver,pattern={{major}}-${{ matrix.stage }}
            type=raw,value=edge-${{ matrix.stage }}
            type=raw,value=latest-${{ matrix.stage }}

      - name: Build and push Alpine images
        uses: docker/build-push-action@v3
        with:
          context: .
          file: build/docker/Dockerfile
          target: ${{ matrix.stage }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-alpine.outputs.tags }}
          labels: ${{ steps.meta-alpine.outputs.labels }}

      - name: Docker meta
        id: meta-debian
        uses: docker/metadata-action@v4
        with:
          flavor: |
            latest=${{ matrix.stage == 'cli' }}
            suffix="-debian",onlatest=true
          images: |
            debricked/cli
            ghcr.io/debricked/cli
          tags: |
            type=semver,pattern={{version}},enable=${{ matrix.stage == 'cli' }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ matrix.stage == 'cli' }}
            type=semver,pattern={{major}},enable=${{ matrix.stage == 'cli' }}
            type=edge,enable=${{ matrix.stage == 'cli' }}
            type=semver,pattern={{version}}-${{ matrix.stage }}
            type=semver,pattern={{major}}.{{minor}}-${{ matrix.stage }}
            type=semver,pattern={{major}}-${{ matrix.stage }}
            type=raw,value=edge-${{ matrix.stage }}
            type=raw,value=latest-${{ matrix.stage }}

      - name: Build and push Debian images
        uses: docker/build-push-action@v3
        with:
          context: .
          file: build/docker/debian.Dockerfile
          target: ${{ matrix.stage }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-debian.outputs.tags }}
          labels: ${{ steps.meta-debian.outputs.labels }}
